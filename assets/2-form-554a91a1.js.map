{"version":3,"file":"2-form-554a91a1.js","sources":["../../src/js/2-form.js"],"sourcesContent":["// // Оголоси поза будь-якими функціями об’єкт formData з полями email та message,\n//  які спочатку мають порожні рядки як значення: { email: \"\", message: \"\" }.\n// // Використовуй метод делегування для відстеження змін у формі через подію input.\n//  Зберігай актуальні дані з полів email та message у formData та записуй цей об’єкт\n//   у локальне сховище.Використовуй ключ \"feedback-form-state\" для зберігання даних у сховищі.\n// При завантаженні сторінки перевір, чи є дані у локальному сховищі.\n// Якщо так, використовуй їх для заповнення форми та об'єкта formData.\n//  Якщо ні, залиш поля форми порожніми.\n// // Перед відправленням форми переконайся, що обидва поля форми заповнені.\n//  Якщо будь - яке з полів(властивостей об’єкта formData) порожнє,\n//     показуй сповіщення з текстом «Fill please all fields».\n//     Якщо всі поля заповнені, виведи у консоль об’єкт formData з актуальними значеннями,\n//     очисти локальне сховище, об’єкт formData і поля форми.\n\nlet formData = { email: '', message: '' };\n\nconst feedbackFormInput = document.querySelector('.js-feedback-form');\n\nconst localStorageChek = () => {\n  const dataFromLs = JSON.parse(localStorage.getItem('feedback-form-state'));\n  if (dataFromLs === null) {\n    return;\n  }\n\n  formData = dataFromLs;\n\n  for (const key in dataFromLs) {\n    feedbackFormInput.elements[key].value = dataFromLs[key];\n  }\n};\nlocalStorageChek();\n\nconst onFormFieldInput = event => {\n  const inputName = event.target.name;\n  const inputValue = event.target.value;\n\n  //   console.log(`${inputName}: ${inputValue}`);\n  formData[inputName] = inputValue;\n  //   console.log(formData);\n\n  window.localStorage.setItem('feedback-form-state', JSON.stringify(formData));\n};\nconst onFormFieldSubmit = event => {\n  event.preventDefault();\n  if (formData.email.length <= 0 || formData.message.length <= 0) {\n    alert('Fill please all fields');\n  } else {\n    console.log(formData);\n  }\n  event.target.reset();\n  window.localStorage.removeItem('feedback-form-state');\n};\nfeedbackFormInput.addEventListener('input', onFormFieldInput);\nfeedbackFormInput.addEventListener('submit', onFormFieldSubmit);\n"],"names":["formData","feedbackFormInput","localStorageChek","dataFromLs","key","onFormFieldInput","event","inputName","inputValue","onFormFieldSubmit"],"mappings":"AAcA,IAAIA,EAAW,CAAE,MAAO,GAAI,QAAS,EAAE,EAEvC,MAAMC,EAAoB,SAAS,cAAc,mBAAmB,EAE9DC,EAAmB,IAAM,CAC7B,MAAMC,EAAa,KAAK,MAAM,aAAa,QAAQ,qBAAqB,CAAC,EACzE,GAAIA,IAAe,KAInB,CAAAH,EAAWG,EAEX,UAAWC,KAAOD,EAChBF,EAAkB,SAASG,CAAG,EAAE,MAAQD,EAAWC,CAAG,EAE1D,EACAF,IAEA,MAAMG,EAAmBC,GAAS,CAChC,MAAMC,EAAYD,EAAM,OAAO,KACzBE,EAAaF,EAAM,OAAO,MAGhCN,EAASO,CAAS,EAAIC,EAGtB,OAAO,aAAa,QAAQ,sBAAuB,KAAK,UAAUR,CAAQ,CAAC,CAC7E,EACMS,EAAoBH,GAAS,CACjCA,EAAM,eAAc,EAChBN,EAAS,MAAM,QAAU,GAAKA,EAAS,QAAQ,QAAU,EAC3D,MAAM,wBAAwB,EAE9B,QAAQ,IAAIA,CAAQ,EAEtBM,EAAM,OAAO,QACb,OAAO,aAAa,WAAW,qBAAqB,CACtD,EACAL,EAAkB,iBAAiB,QAASI,CAAgB,EAC5DJ,EAAkB,iBAAiB,SAAUQ,CAAiB"}